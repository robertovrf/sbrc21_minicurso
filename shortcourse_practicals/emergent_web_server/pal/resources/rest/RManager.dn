// RManager.dn
uses data.String
uses distributor_proxies.Proxy

data MngRequest {
	char ownerIP[]
	char nameSpace[]
	char remoteInterface[]
	String currentIPs[] // ips where the system is running
	String requiredIPS[] // ips of the machines that are using this system
	bool running
	bool sharedState 
}

interface RManager {
	/* HTTP responses */
	const char OK_STATUS[] 			= "200 OK"
	const char BADREQUEST_STATUS[] 	= "400 Bad Request"
	const char NOTFOUND_STATUS[] 	= "404 Not Found"

	/* Manager class B rest API */
	const char HELP[] 		= "help"
	const char REGISTER[] 	= "register"
	const char CHANGE[] 	= "change"
	const char TERMINATE[]  = "terminate"
	const char GET_IPS[]	= "get_ips"


	/* Manager class B responses */
	const char JUST_REGISTERED[]	= "just_registered"
	const char ALREADY_REGISTERED[] = "already_registered"

	const int RMANAGER_PORT = 2008
	
	RManager(char ip[], int port)
	char[] register(char ownerIP[], char nameSpace[], char remoteInterface[], bool sharedState)
	ProxyInfo[] change(char ownerIP[], char nameSpace[], char remoteInterface[], String ips[])
	String[] getIPs(char nameSpace[], char remoteInterface[])
	char[] terminate(char ownerIP[], char nameSpace[], char remoteInterface[])
}
